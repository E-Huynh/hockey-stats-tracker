{"version":3,"sources":["components/statsTable.js","components/teamName.js","components/randomBtn.js","components/option.js","components/select.js","components/teams.js","app.js","index.js"],"names":["StatsTable","props","React","useState","columns","title","field","lookup","L","R","C","D","G","type","state","data","stats","options","paging","TeamName","team","RandomBtn","className","onClick","displayRandomTeam","option","value","arrayValue","Select","onChange","disabled","label","array","map","index","Teams","position","Stats","filterStats","console","log","filterByTeam","replace","filterByPosition","filteredTeam","filteredPlayers","filter","player","length","event","preventDefault","rand","Math","floor","random","allTeams","setState","resetStats","handleTeamSelect","target","handlePositionSelect","teamObj","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2e90bef.chunk.js","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\n\nexport default function StatsTable(props) {\n  const [state] = React.useState({\n    columns: [\n      { title: 'Player', field: 'player' },\n      { title: 'Team', field: 'team' },\n      { title: 'Position', field: 'position', lookup: { L: 'Left Wing', R: 'Right Wing', C: 'Center', D: 'Defense', G: 'Goalie' } },\n      { title: 'Shoot/Catch', field: 'sc', lookup: { L: 'Left', R: 'Right' } },\n      { title: 'Games Played', field: 'played', type: 'numeric' },\n      { title: 'Goals', field: 'goals', type: 'numeric' },\n      { title: 'Assists', field: 'assists', type: 'numeric' },\n      { title: 'Points', field: 'points', type: 'numeric' },\n    ],\n  });\n\n  return (\n    <MaterialTable\n      title=\"Player Stats\"\n      columns={state.columns}\n      data={props.stats}\n      options={{ paging: false }}\n    // editable={{\n    //   onRowAdd: (newData) =>\n    //     new Promise((resolve) => {\n    //       setTimeout(() => {\n    //         resolve();\n    //         setState((prevState) => {\n    //           const data = [...prevState.data];\n    //           data.push(newData);\n    //           return { ...prevState, data };\n    //         });\n    //       }, 600);\n    //     }),\n    //   onRowUpdate: (newData, oldData) =>\n    //     new Promise((resolve) => {\n    //       setTimeout(() => {\n    //         resolve();\n    //         if (oldData) {\n    //           setState((prevState) => {\n    //             const data = [...prevState.data];\n    //             data[data.indexOf(oldData)] = newData;\n    //             return { ...prevState, data };\n    //           });\n    //         }\n    //       }, 600);\n    //     }),\n    //   onRowDelete: (oldData) =>\n    //     new Promise((resolve) => {\n    //       setTimeout(() => {\n    //         resolve();\n    //         setState((prevState) => {\n    //           const data = [...prevState.data];\n    //           data.splice(data.indexOf(oldData), 1);\n    //           return { ...prevState, data };\n    //         });\n    //       }, 600);\n    //     }),\n    // }}\n    />\n  );\n}\n","import React from 'react';\n\nfunction TeamName(props) {\n    return (\n        <h1>{props.team}</h1>\n    )\n}\n\nexport default TeamName;","import React from 'react';\n\nfunction RandomBtn(props) {\n    return (\n        <button className=\"waves-effect waves-light btn randomBtn\" onClick={props.displayRandomTeam}>Random</button>\n    );\n}\n\nexport default RandomBtn;","import React from 'react'\n\nexport default function option(props) {\n    return (\n        <option value={props.arrayValue}>{props.arrayValue}</option>\n    )\n}\n","import React from 'react';\nimport Option from './option'\n\nfunction Select(props) {\n    return (\n        <div className=\"input-field col s12\">\n            <select onChange={props.onChange}>\n                <option disabled>Select a {props.label}</option>\n                {props.array.map((index) =>\n                    <Option arrayValue={index} />\n                )}\n            </select>\n            <label>Select a {props.label}</label>\n        </div>\n\n\n    )\n}\n\nexport default Select;","import React from 'react';\nimport StatsTable from './statsTable';\nimport TeamName from './teamName';\nimport RandomBtn from './randomBtn';\nimport allTeams from './allTeams.json';\nimport Stats from './stats.json';\nimport Select from './select';\n\n// Variables\n\n\n\nclass Teams extends React.Component {\n    // states\n    state = {\n        team: \"Carolina Hurricanes\",\n        position: \"A\",\n        stats: ({Stats})\n    }\n\n    filterStats = () => {\n        console.log('filterStats fx: ', this.state.stats);\n    }\n\n    filterByTeam = () => {\n        const team = Stats[this.state.team.replace(/\\s/g, '')];\n        return this.filterByPosition(team)\n    }\n    \n    filterByPosition = filteredTeam => {\n        const filteredPlayers = filteredTeam.filter((player, index) => {\n            return this.state.position === player.position\n        })\n        return filteredPlayers.length !== 0 ? filteredPlayers : filteredTeam\n    }\n\n    // methods\n    displayRandomTeam = event => {\n        event.preventDefault()\n        const rand = Math.floor(Math.random() * allTeams.length)\n        this.setState({team: allTeams[rand]})\n    };\n\n    resetStats = event => {\n        this.setState({\n            team: \"Carolina Hurricanes\",\n            position: \"A\",\n            stats: {Stats}\n        })\n    }\n\n    handleTeamSelect = event => {\n        this.setState({team: event.target.value})\n    }\n\n    handlePositionSelect = event => {\n        switch (event.target.value) {\n            case 'Left Wing':\n                this.setState({position: 'L'})\n                break;\n            case 'Right Wing':\n                this.setState({position: 'R'})\n                break;\n            case 'Center':\n                this.setState({position: 'C'})\n                break;\n            case 'Defensemen':\n                this.setState({position: 'D'})\n                break;\n            case 'Goalie':\n                this.setState({position: 'G'})\n                break;\n            default:\n                this.setState({position: 'A'})\n                break;\n        }\n    }\n\n    // render\n    render() {\n        const teamObj = this.filterByTeam()\n        // const teamObj = this.state.stats[this.state.team.replace(/\\s/g, '')]\n        return (\n            <div className='center-align mainDisplay'>\n                <Select label={'Team'} array={allTeams} onChange={this.handleTeamSelect}/>\n                <Select label={'Position'} array={['All Positions', 'Left Wing', 'Right Wing', 'Center', 'Defensemen', 'Goalie']} onChange={this.handlePositionSelect}/>\n                <RandomBtn displayRandomTeam={this.displayRandomTeam}/>\n                <TeamName team={this.state.team !== \"\" ? this.state.team : \"Generate Random Team\"}/>\n                <StatsTable stats={teamObj}/>\n            </div>\n        );\n    }\n}\n\n\nexport default Teams;","import React from \"react\";\n// import Table from \"./components/table\";\nimport Teams from \"./components/teams\";\n\nfunction App() {\n    return (\n        <div className='container'>\n            <h1 className=\"center-align white-text\">Hockey Stats Tracker</h1>\n              <Teams />\n        </div>\n    )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}